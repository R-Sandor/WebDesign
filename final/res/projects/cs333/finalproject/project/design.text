Grid Racers! Final project!



*Create the map
**use course.dat from the command line
***
*** Calculate the width of the track
*** Calculate the length of the track
****Map::Map(istream& in)
*****{
******Takes input for the course.dat and then uses it to construct the map.
*******int i = 0;
*******while (in)
*******{
********string str;
********getline (in,str);
********if (i == 0)
********{
********columns = str.length();
********}
********i++;
********}
********rows = i-1;
*****first = NULL;
*****}
****Create storage for the track
*****store whether each square of the track is a wall or should have a value 
**assign values to each square in the map 
*Intialize the cars 
**set cars in numerical order 1 2 3
*While the game has no winner 
{
*Move cars
**check if move is legal
***move cars in order of 1, 2,3 then, 2,3,1 and 3,1,2
***check if move runs into wall or other cars
****if the move runs in to wall set velocity (0,0)
*****{subtract 1 from the maximum velocity}.
****else complete the move 
*****add velocity 
***Computer select move that is the most effiecent 
*****place car on spot
******redraw the map
}

necissary objects/Modules 
Map
Cars 
Game 




NOTE:
I realize that this is not as detailed as my last design.text but also struggled with how to create
some of these algorithms till I actually started working with the program. My fear was that I would have 
a design document that fall apart once actually implemented. I can say I am glad I did it this way as there
were things that I used in my program that I would have never thought of at the time of reading game spefications 
suchs as returning a vector to hold all the locations where I found a number.


